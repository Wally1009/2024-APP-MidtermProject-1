"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useToast = exports.Toast = void 0;
const react_1 = __importDefault(require("react"));
const styled_components_1 = require("./styled-components");
const toast_1 = require("@gluestack-ui/toast");
const toast_2 = require("@gluestack-ui/toast");
const animation_resolver_1 = require("@gluestack-style/animation-resolver");
exports.Toast = (0, toast_1.createToast)({
    Root: styled_components_1.Root,
    Title: styled_components_1.Title,
    Description: styled_components_1.Description,
});
function useToast() {
    const toast = (0, toast_2.createToastHook)(styled_components_1.AnimationWrapper, animation_resolver_1.AnimatePresence)();
    const close = toast.close;
    const closeAll = toast.closeAll;
    const isActive = toast.isActive;
    const show = (_a) => {
        var { title, description, duration, id: IDbyUser, onCloseComplete, placement, render } = _a, props = __rest(_a, ["title", "description", "duration", "id", "onCloseComplete", "placement", "render"]);
        if (render)
            toast.show({
                containerStyle: Object.assign({}, props),
                duration,
                id: IDbyUser,
                onCloseComplete,
                placement,
                render,
            });
        else {
            const ToastComp = ({ id }) => {
                return (react_1.default.createElement(exports.Toast, { sx: props, nativeID: id },
                    title && react_1.default.createElement(exports.Toast.Title, null, title),
                    description && (react_1.default.createElement(exports.Toast.Description, null, description))));
            };
            toast.show({
                duration,
                containerStyle: Object.assign({}, props),
                id: IDbyUser,
                onCloseComplete,
                placement,
                render: ToastComp,
            });
        }
    };
    return { close: close, closeAll: closeAll, isActive: isActive, show: show };
}
exports.useToast = useToast;

import React from 'react';
import { GenericComponentType } from '../../types';
export declare const AccessibleMenu: import("@gluestack-ui/menu/lib/typescript/types").IMenuComponentType<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<((false | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").Animated.WithAnimatedObject<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").RecursiveArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>> | readonly (import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>)[]>) & (false | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").RecursiveArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>>)) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<(Omit<import("@expo/html-elements/build/primitives/View").WebViewProps & Omit<import("react-native").ViewProps & React.ClassAttributes<typeof import("react-native").View>, "style" | "accessibilityRole">, "ref"> & React.RefAttributes<React.Component<import("@expo/html-elements/build/primitives/View").ViewProps, any, any>>) | (Omit<import("@expo/html-elements/build/primitives/View").WebViewProps & Omit<import("react-native").ViewProps & React.ClassAttributes<typeof import("react-native").View>, "style" | "accessibilityRole">, "ref"> & {
    ref?: ((instance: typeof import("react-native").View | null) => void) | React.RefObject<typeof import("react-native").View> | null | undefined;
})> & import("@legendapp/motion").MotionComponentProps<React.ComponentType<import("@expo/html-elements/build/primitives/View").ViewProps>, import("@expo/html-elements/build/primitives/View").ViewStyle, unknown, unknown, unknown>, "Menu">, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, unknown>, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
        '2xl': unknown;
        '3xl': unknown;
        '4xl': unknown;
        '5xl': unknown;
        '6xl': unknown;
    };
}, import("react-native").TextProps, "MenuItemLabel">>;
export type IMenuComponentType<Menu, Item> = GenericComponentType<Menu> & {
    Item: GenericComponentType<Item>;
    Group: any;
    OptionGroup: any;
    ItemOption: any;
};
export declare const Menu: IMenuComponentType<import("@gluestack-ui/menu/lib/typescript/types").IMenuComponentType<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<((false | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").Animated.WithAnimatedObject<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").RecursiveArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>> | readonly (import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>)[]>) & (false | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle> | import("react-native").RecursiveArray<import("react-native").Falsy | import("@expo/html-elements/build/primitives/View").ViewStyle | import("react-native").RegisteredStyle<import("@expo/html-elements/build/primitives/View").ViewStyle>>)) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<(Omit<import("@expo/html-elements/build/primitives/View").WebViewProps & Omit<import("react-native").ViewProps & React.ClassAttributes<typeof import("react-native").View>, "style" | "accessibilityRole">, "ref"> & React.RefAttributes<React.Component<import("@expo/html-elements/build/primitives/View").ViewProps, any, any>>) | (Omit<import("@expo/html-elements/build/primitives/View").WebViewProps & Omit<import("react-native").ViewProps & React.ClassAttributes<typeof import("react-native").View>, "style" | "accessibilityRole">, "ref"> & {
    ref?: ((instance: typeof import("react-native").View | null) => void) | React.RefObject<typeof import("react-native").View> | null | undefined;
})> & import("@legendapp/motion").MotionComponentProps<React.ComponentType<import("@expo/html-elements/build/primitives/View").ViewProps>, import("@expo/html-elements/build/primitives/View").ViewStyle, unknown, unknown, unknown>, "Menu">, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, unknown>, import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
        '2xl': unknown;
        '3xl': unknown;
        '4xl': unknown;
        '5xl': unknown;
        '6xl': unknown;
    };
}, import("react-native").TextProps, "MenuItemLabel">>, React.ForwardRefExoticComponent<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, unknown> & import("react-stately").ItemProps<import("@gluestack-style/react/lib/typescript/types").StyledComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & React.RefAttributes<import("react-native").View>, unknown>> & import("@gluestack-ui/menu/lib/typescript/types").IItemProp>>;
